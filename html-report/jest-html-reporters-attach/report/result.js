window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":0,"numPassedTestSuites":1,"numPassedTests":33,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":1,"numTodoTests":0,"numTotalTestSuites":2,"numTotalTests":33,"startTime":1746663447083,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":25,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1746663453872,"runtime":1084,"slow":false,"start":1746663452788},"testFilePath":"D:\\Assignment\\6th Sem\\Software Engineering\\Project\\mello-motion\\frontend\\test\\api.test.ts","failureMessage":"\n\n  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Invalid: beforeEach() may not be used in a describe block containing no tests.\n\n    \u001b[0m \u001b[90m 285 |\u001b[39m     }\u001b[33m;\u001b[39m\n     \u001b[90m 286 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 287 |\u001b[39m     beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m     |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 288 |\u001b[39m       mockDb\u001b[33m.\u001b[39mselect\u001b[33m.\u001b[39mmockReset()\u001b[33m;\u001b[39m\n     \u001b[90m 289 |\u001b[39m       (getDb \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMock\u001b[39m)\u001b[33m.\u001b[39mmockReturnValue(mockDb)\u001b[33m;\u001b[39m\n     \u001b[90m 290 |\u001b[39m       (initDb \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMock\u001b[39m)\u001b[33m.\u001b[39mmockResolvedValue(mockDb \u001b[36mas\u001b[39m any)\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat beforeEach (\u001b[22m\u001b[0m\u001b[36mtest/api.test.ts\u001b[39m\u001b[0m\u001b[2m:287:5)\u001b[22m\n      \u001b[2mat describe (\u001b[22m\u001b[0m\u001b[36mtest/api.test.ts\u001b[39m\u001b[0m\u001b[2m:281:3)\u001b[22m\n      \u001b[2mat Object.describe (\u001b[22m\u001b[0m\u001b[36mtest/api.test.ts\u001b[39m\u001b[0m\u001b[2m:24:1)\u001b[22m\n","testResults":[{"ancestorTitles":["API Utility Functions","getPlaylists"],"duration":37,"failureMessages":[],"fullName":"API Utility Functions getPlaylists should fetch and process data to create playlists","status":"passed","title":"should fetch and process data to create playlists"},{"ancestorTitles":["API Utility Functions","getPlaylists"],"duration":49,"failureMessages":[],"fullName":"API Utility Functions getPlaylists should throw an error if fetching recently played tracks fails","status":"passed","title":"should throw an error if fetching recently played tracks fails"},{"ancestorTitles":["API Utility Functions","getPlaylists"],"duration":4,"failureMessages":[],"fullName":"API Utility Functions getPlaylists should throw an error if fetching user preferences fails","status":"passed","title":"should throw an error if fetching user preferences fails"},{"ancestorTitles":["API Utility Functions","getPlaylists"],"duration":4,"failureMessages":[],"fullName":"API Utility Functions getPlaylists should throw an error if fetching user mood fails","status":"passed","title":"should throw an error if fetching user mood fails"},{"ancestorTitles":["API Utility Functions","getPlaylists"],"duration":5,"failureMessages":[],"fullName":"API Utility Functions getPlaylists should throw an error if generating recommendations fails","status":"passed","title":"should throw an error if generating recommendations fails"},{"ancestorTitles":["API Utility Functions","savePlaylists"],"duration":27,"failureMessages":[],"fullName":"API Utility Functions savePlaylists should create new playlists if they do not exist","status":"passed","title":"should create new playlists if they do not exist"},{"ancestorTitles":["API Utility Functions","savePlaylists"],"duration":3,"failureMessages":[],"fullName":"API Utility Functions savePlaylists should update existing playlists","status":"passed","title":"should update existing playlists"},{"ancestorTitles":["API Utility Functions","savePlaylists"],"duration":5,"failureMessages":[],"fullName":"API Utility Functions savePlaylists should initialize DB if getDb returns null","status":"passed","title":"should initialize DB if getDb returns null"},{"ancestorTitles":["API Utility Functions","savePlaylists"],"duration":8,"failureMessages":[],"fullName":"API Utility Functions savePlaylists should throw an error if database connection is not initialized and initDb fails","status":"passed","title":"should throw an error if database connection is not initialized and initDb fails"},{"ancestorTitles":["API Utility Functions","savePlaylists"],"duration":4,"failureMessages":[],"fullName":"API Utility Functions savePlaylists should throw an error if db.create fails","status":"passed","title":"should throw an error if db.create fails"},{"ancestorTitles":["API Utility Functions","savePlaylists"],"duration":4,"failureMessages":[],"fullName":"API Utility Functions savePlaylists should throw an error if db.update fails","status":"passed","title":"should throw an error if db.update fails"},{"ancestorTitles":["API Utility Functions","savePlaylists"],"duration":3,"failureMessages":[],"fullName":"API Utility Functions savePlaylists should use \"Unknown Artist\" if artist is not provided for a track","status":"passed","title":"should use \"Unknown Artist\" if artist is not provided for a track"},{"ancestorTitles":["API Utility Functions","saveRecommendations"],"duration":14,"failureMessages":[],"fullName":"API Utility Functions saveRecommendations should throw an error if database connection is not initialized and initDb fails","status":"passed","title":"should throw an error if database connection is not initialized and initDb fails"},{"ancestorTitles":["API Utility Functions","saveRecommendations"],"duration":12,"failureMessages":[],"fullName":"API Utility Functions saveRecommendations should throw an error if db.create fails","status":"passed","title":"should throw an error if db.create fails"},{"ancestorTitles":["API Utility Functions","createOrUpdateEmotionalProfile"],"duration":6,"failureMessages":[],"fullName":"API Utility Functions createOrUpdateEmotionalProfile should create a new emotional profile if one does not exist","status":"passed","title":"should create a new emotional profile if one does not exist"},{"ancestorTitles":["API Utility Functions","createOrUpdateEmotionalProfile"],"duration":5,"failureMessages":[],"fullName":"API Utility Functions createOrUpdateEmotionalProfile should update an existing emotional profile","status":"passed","title":"should update an existing emotional profile"},{"ancestorTitles":["API Utility Functions","createOrUpdateEmotionalProfile"],"duration":7,"failureMessages":[],"fullName":"API Utility Functions createOrUpdateEmotionalProfile should throw an error if DB connection fails and initDb also fails","status":"passed","title":"should throw an error if DB connection fails and initDb also fails"},{"ancestorTitles":["API Utility Functions","createOrUpdateEmotionalProfile"],"duration":1,"failureMessages":[],"fullName":"API Utility Functions createOrUpdateEmotionalProfile should throw an error if db.create fails","status":"passed","title":"should throw an error if db.create fails"},{"ancestorTitles":["API Utility Functions","createOrUpdateEmotionalProfile"],"duration":1,"failureMessages":[],"fullName":"API Utility Functions createOrUpdateEmotionalProfile should throw an error if db.update fails","status":"passed","title":"should throw an error if db.update fails"},{"ancestorTitles":["API Utility Functions","createUserInDb"],"duration":9,"failureMessages":[],"fullName":"API Utility Functions createUserInDb should create a new user if one does not exist","status":"passed","title":"should create a new user if one does not exist"},{"ancestorTitles":["API Utility Functions","createUserInDb"],"duration":2,"failureMessages":[],"fullName":"API Utility Functions createUserInDb should update an existing user","status":"passed","title":"should update an existing user"},{"ancestorTitles":["API Utility Functions","createUserInDb"],"duration":2,"failureMessages":[],"fullName":"API Utility Functions createUserInDb should use fallback values for username and email if not provided","status":"passed","title":"should use fallback values for username and email if not provided"},{"ancestorTitles":["API Utility Functions","createUserInDb"],"duration":5,"failureMessages":[],"fullName":"API Utility Functions createUserInDb should throw an error if DB connection fails and initDb also fails","status":"passed","title":"should throw an error if DB connection fails and initDb also fails"},{"ancestorTitles":["API Utility Functions","createUserInDb"],"duration":2,"failureMessages":[],"fullName":"API Utility Functions createUserInDb should throw an error if db.create fails","status":"passed","title":"should throw an error if db.create fails"},{"ancestorTitles":["API Utility Functions","createUserInDb"],"duration":3,"failureMessages":[],"fullName":"API Utility Functions createUserInDb should throw an error if db.update fails","status":"passed","title":"should throw an error if db.update fails"}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1746663458894,"runtime":6111,"slow":true,"start":1746663452783},"testFilePath":"D:\\Assignment\\6th Sem\\Software Engineering\\Project\\mello-motion\\frontend\\test\\app.test.tsx","failureMessage":null,"testResults":[{"ancestorTitles":["Dashboard Components"],"duration":438,"failureMessages":[],"fullName":"Dashboard Components AcceptPlaylistModal renders and handles input","status":"passed","title":"AcceptPlaylistModal renders and handles input"},{"ancestorTitles":["Dashboard Components"],"duration":37,"failureMessages":[],"fullName":"Dashboard Components Discover component renders and switches tabs","status":"passed","title":"Discover component renders and switches tabs"},{"ancestorTitles":["Dashboard Components"],"duration":24,"failureMessages":[],"fullName":"Dashboard Components MentalWellnessCard renders with data","status":"passed","title":"MentalWellnessCard renders with data"},{"ancestorTitles":["Dashboard Components"],"duration":21,"failureMessages":[],"fullName":"Dashboard Components MenuItem renders and handles click","status":"passed","title":"MenuItem renders and handles click"},{"ancestorTitles":["Dashboard Components"],"duration":10,"failureMessages":[],"fullName":"Dashboard Components MoodCard renders with data","status":"passed","title":"MoodCard renders with data"},{"ancestorTitles":["Dashboard Components"],"duration":56,"failureMessages":[],"fullName":"Dashboard Components MyPlaylists renders and allows playlist creation","status":"passed","title":"MyPlaylists renders and allows playlist creation"},{"ancestorTitles":["Dashboard Components"],"duration":52,"failureMessages":[],"fullName":"Dashboard Components PlaylistDetails renders and allows track selection","status":"passed","title":"PlaylistDetails renders and allows track selection"},{"ancestorTitles":["Dashboard Components"],"duration":355,"failureMessages":[],"fullName":"Dashboard Components RecentlyPlayedCard renders","status":"passed","title":"RecentlyPlayedCard renders"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":[],"coverageDirectory":"D:\\Assignment\\6th Sem\\Software Engineering\\Project\\mello-motion\\frontend\\coverage","coverageProvider":"v8","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":3,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["D:\\Assignment\\6th Sem\\Software Engineering\\Project\\mello-motion\\frontend\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"./html-report","filename":"report.html","expand":true}]],"rootDir":"D:\\Assignment\\6th Sem\\Software Engineering\\Project\\mello-motion\\frontend","runTestsByPath":false,"seed":1742151223,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"D:\\Assignment\\6th Sem\\Software Engineering\\Project\\mello-motion\\frontend\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1746663459090,"_reporterOptions":{"publicPath":"./html-report","filename":"report.html","expand":true,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})